class Comparison {
    static  ComparisonOperator = {
    GREATER: '>',
    GREATER_OR_EQUAL: '>=',
    SMALLER: '<',
    SMALLER_OR_EQUAL: '<=',
    EQUAL: '==',
    STRICT_EQUAL: '===',
    NOT_EQUAL: '!=',
    STRICT_NOT_EQUAL: '!==',
};

static  ComparisonTerm = {
    GREATER: 'greater',
    LARGER: 'larger',
    BIGGER: 'bigger',
    MORE: 'more',
    HIGHER: 'higher',
    LARGER_THAN: 'larger than',
    EXCEEDS: 'exceeds',
    SURPASSES: 'surpasses',
    OVER: 'over',
    GREATER_OR_EQUAL: 'greater or equal',
    LARGER_OR_EQUAL: 'larger or equal',
    EQUAL_OR_GREATER: 'equal or greater',
    AT_LEAST: 'at least',
    SMALLER_OR_EQUAL: 'smaller or equal',
    SMALLER: 'smaller',
    LESS: 'less',
    FEWER: 'fewer',
    LOWER: 'lower',
    UNDER: 'under',
    LESS_THAN: 'less than',
    LESS_OR_EQUAL: 'less or equal',
    LOWER_OR_EQUAL: 'lower or equal',
    EQUAL: 'equal',
    SAME: 'same',
    IDENTICAL: 'identical',
    STRICT_EQUAL: 'strict equal',
    EXACTLY_EQUAL: 'exactly equal',
    NOT_EQUAL: 'not equal',
    DIFFERENT: 'different',
    NOT_SAME: 'not same',
    STRICT_NOT_EQUAL: 'strict not equal',
    EXACTLY_NOT_EQUAL: 'exactly not equal',
};


 // Mapping from ComparisonTerm to ComparisonOperator
 static termToOperatorMap = {
    [Comparison.ComparisonTerm.GREATER_OR_EQUAL]: Comparison.ComparisonOperator.GREATER_OR_EQUAL,
    [Comparison.ComparisonTerm.LOWER_OR_EQUAL]: Comparison.ComparisonOperator.SMALLER_OR_EQUAL,
    [Comparison.ComparisonTerm.LARGER_OR_EQUAL]: Comparison.ComparisonOperator.GREATER_OR_EQUAL,
    [Comparison.ComparisonTerm.EQUAL_OR_GREATER]: Comparison.ComparisonOperator.GREATER_OR_EQUAL,
    [Comparison.ComparisonTerm.AT_LEAST]: Comparison.ComparisonOperator.GREATER_OR_EQUAL,
    [Comparison.ComparisonTerm.SMALLER_OR_EQUAL]: Comparison.ComparisonOperator.SMALLER_OR_EQUAL,
    [Comparison.ComparisonTerm.LESS_OR_EQUAL]: Comparison.ComparisonOperator.SMALLER_OR_EQUAL,
    [Comparison.ComparisonTerm.STRICT_EQUAL]: Comparison.ComparisonOperator.STRICT_EQUAL,
    [Comparison.ComparisonTerm.EXACTLY_EQUAL]: Comparison.ComparisonOperator.STRICT_EQUAL,
    [Comparison.ComparisonTerm.STRICT_NOT_EQUAL]: Comparison.ComparisonOperator.STRICT_NOT_EQUAL,
    [Comparison.ComparisonTerm.EXACTLY_NOT_EQUAL]: Comparison.ComparisonOperator.STRICT_NOT_EQUAL,
    [Comparison.ComparisonTerm.GREATER]: Comparison.ComparisonOperator.GREATER,
    [Comparison.ComparisonTerm.LARGER]: Comparison.ComparisonOperator.GREATER,
    [Comparison.ComparisonTerm.BIGGER]: Comparison.ComparisonOperator.GREATER,
    [Comparison.ComparisonTerm.MORE]: Comparison.ComparisonOperator.GREATER,
    [Comparison.ComparisonTerm.HIGHER]: Comparison.ComparisonOperator.GREATER,
    [Comparison.ComparisonTerm.LARGER_THAN]: Comparison.ComparisonOperator.GREATER,
    [Comparison.ComparisonTerm.EXCEEDS]: Comparison.ComparisonOperator.GREATER,
    [Comparison.ComparisonTerm.SURPASSES]: Comparison.ComparisonOperator.GREATER,
    [Comparison.ComparisonTerm.OVER]: Comparison.ComparisonOperator.GREATER,
    [Comparison.ComparisonTerm.SMALLER]: Comparison.ComparisonOperator.SMALLER,
    [Comparison.ComparisonTerm.LESS]: Comparison.ComparisonOperator.SMALLER,
    [Comparison.ComparisonTerm.FEWER]: Comparison.ComparisonOperator.SMALLER,
    [Comparison.ComparisonTerm.LOWER]: Comparison.ComparisonOperator.SMALLER,
    [Comparison.ComparisonTerm.UNDER]: Comparison.ComparisonOperator.SMALLER,
    [Comparison.ComparisonTerm.LESS_THAN]: Comparison.ComparisonOperator.SMALLER,
    [Comparison.ComparisonTerm.NOT_EQUAL]: Comparison.ComparisonOperator.NOT_EQUAL,
    [Comparison.ComparisonTerm.EQUAL]: Comparison.ComparisonOperator.EQUAL,
    [Comparison.ComparisonTerm.NOT_SAME]: Comparison.ComparisonOperator.NOT_EQUAL,
    [Comparison.ComparisonTerm.SAME]: Comparison.ComparisonOperator.EQUAL,
    [Comparison.ComparisonTerm.IDENTICAL]: Comparison.ComparisonOperator.EQUAL,
    [Comparison.ComparisonTerm.DIFFERENT]: Comparison.ComparisonOperator.NOT_EQUAL,
};

}

export default Comparison;